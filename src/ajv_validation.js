/* eslint-disable */
// noinspection ES6ConvertVarToLetConst,UnreachableCodeJS,JSDuplicatedDeclaration,JSUnnecessarySemicolon,UnnecessaryLocalVariableJS,SuspiciousTypeOfGuard

"use strict";export const ValidateMusicPieceArray = validate10;const schema11 = {"$id":"/MusicPieceArray","type":"array","items":{"type":"array","items":{"type":"array","items":[{"type":"integer","minimum":1,"maximum":127},{"type":"number","minimum":0},{"type":"number","minimum":0}],"minItems":3,"maxItems":3}}};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="/MusicPieceArray" */;let vErrors = null;let errors = 0;if(errors === 0){if(Array.isArray(data)){var valid0 = true;const len0 = data.length;for(let i0=0; i0<len0; i0++){let data0 = data[i0];const _errs1 = errors;if(errors === _errs1){if(Array.isArray(data0)){var valid1 = true;const len1 = data0.length;for(let i1=0; i1<len1; i1++){let data1 = data0[i1];const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){if(data1.length > 3){validate10.errors = [{instancePath:instancePath+"/" + i0+"/" + i1,schemaPath:"#/items/items/maxItems",keyword:"maxItems",params:{limit: 3},message:"must NOT have more than 3 items"}];return false;}else {if(data1.length < 3){validate10.errors = [{instancePath:instancePath+"/" + i0+"/" + i1,schemaPath:"#/items/items/minItems",keyword:"minItems",params:{limit: 3},message:"must NOT have fewer than 3 items"}];return false;}else {const len2 = data1.length;if(len2 > 0){let data2 = data1[0];const _errs5 = errors;if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){validate10.errors = [{instancePath:instancePath+"/" + i0+"/" + i1+"/0",schemaPath:"#/items/items/items/0/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs5){if((typeof data2 == "number") && (isFinite(data2))){if(data2 > 127 || isNaN(data2)){validate10.errors = [{instancePath:instancePath+"/" + i0+"/" + i1+"/0",schemaPath:"#/items/items/items/0/maximum",keyword:"maximum",params:{comparison: "<=", limit: 127},message:"must be <= 127"}];return false;}else {if(data2 < 1 || isNaN(data2)){validate10.errors = [{instancePath:instancePath+"/" + i0+"/" + i1+"/0",schemaPath:"#/items/items/items/0/minimum",keyword:"minimum",params:{comparison: ">=", limit: 1},message:"must be >= 1"}];return false;}}}}var valid2 = _errs5 === errors;}if(valid2){if(len2 > 1){let data3 = data1[1];const _errs7 = errors;if(errors === _errs7){if((typeof data3 == "number") && (isFinite(data3))){if(data3 < 0 || isNaN(data3)){validate10.errors = [{instancePath:instancePath+"/" + i0+"/" + i1+"/1",schemaPath:"#/items/items/items/1/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/" + i0+"/" + i1+"/1",schemaPath:"#/items/items/items/1/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid2 = _errs7 === errors;}if(valid2){if(len2 > 2){let data4 = data1[2];const _errs9 = errors;if(errors === _errs9){if((typeof data4 == "number") && (isFinite(data4))){if(data4 < 0 || isNaN(data4)){validate10.errors = [{instancePath:instancePath+"/" + i0+"/" + i1+"/2",schemaPath:"#/items/items/items/2/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/" + i0+"/" + i1+"/2",schemaPath:"#/items/items/items/2/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid2 = _errs9 === errors;}}}}}}else {validate10.errors = [{instancePath:instancePath+"/" + i0+"/" + i1,schemaPath:"#/items/items/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid1 = _errs3 === errors;if(!valid1){break;}}}else {validate10.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"#/items/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs1 === errors;if(!valid0){break;}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}validate10.errors = vErrors;return errors === 0;}export const ValidateMusicPieceVerbose = validate11;const schema12 = {"$id":"/MusicPieceVerbose","type":"object","required":["parts"],"additionalProperties":false,"properties":{"parts":{"type":"array","items":{"$ref":"/MusicPart"}}}};const schema13 = {"$id":"/MusicPart","type":"object","required":["notes"],"additionalProperties":false,"properties":{"notes":{"type":"array","items":{"$ref":"/MusicNote"}}}};const schema14 = {"$id":"/MusicNote","type":"object","required":["pitch","startSeconds","durationSeconds"],"additionalProperties":false,"properties":{"pitch":{"type":"integer","minimum":1,"maximum":127},"startSeconds":{"type":"number","minimum":0},"durationSeconds":{"type":"number","minimum":0}}};function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="/MusicPart" */;let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.notes === undefined) && (missing0 = "notes")){validate12.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(key0 === "notes")){validate12.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.notes !== undefined){let data0 = data.notes;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){let data1 = data0[i0];const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing1;if((((data1.pitch === undefined) && (missing1 = "pitch")) || ((data1.startSeconds === undefined) && (missing1 = "startSeconds"))) || ((data1.durationSeconds === undefined) && (missing1 = "durationSeconds"))){validate12.errors = [{instancePath:instancePath+"/notes/" + i0,schemaPath:"/MusicNote/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs7 = errors;for(const key1 in data1){if(!(((key1 === "pitch") || (key1 === "startSeconds")) || (key1 === "durationSeconds"))){validate12.errors = [{instancePath:instancePath+"/notes/" + i0,schemaPath:"/MusicNote/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs7 === errors){if(data1.pitch !== undefined){let data2 = data1.pitch;const _errs8 = errors;if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){validate12.errors = [{instancePath:instancePath+"/notes/" + i0+"/pitch",schemaPath:"/MusicNote/properties/pitch/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs8){if((typeof data2 == "number") && (isFinite(data2))){if(data2 > 127 || isNaN(data2)){validate12.errors = [{instancePath:instancePath+"/notes/" + i0+"/pitch",schemaPath:"/MusicNote/properties/pitch/maximum",keyword:"maximum",params:{comparison: "<=", limit: 127},message:"must be <= 127"}];return false;}else {if(data2 < 1 || isNaN(data2)){validate12.errors = [{instancePath:instancePath+"/notes/" + i0+"/pitch",schemaPath:"/MusicNote/properties/pitch/minimum",keyword:"minimum",params:{comparison: ">=", limit: 1},message:"must be >= 1"}];return false;}}}}var valid3 = _errs8 === errors;}else {var valid3 = true;}if(valid3){if(data1.startSeconds !== undefined){let data3 = data1.startSeconds;const _errs10 = errors;if(errors === _errs10){if((typeof data3 == "number") && (isFinite(data3))){if(data3 < 0 || isNaN(data3)){validate12.errors = [{instancePath:instancePath+"/notes/" + i0+"/startSeconds",schemaPath:"/MusicNote/properties/startSeconds/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate12.errors = [{instancePath:instancePath+"/notes/" + i0+"/startSeconds",schemaPath:"/MusicNote/properties/startSeconds/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid3 = _errs10 === errors;}else {var valid3 = true;}if(valid3){if(data1.durationSeconds !== undefined){let data4 = data1.durationSeconds;const _errs12 = errors;if(errors === _errs12){if((typeof data4 == "number") && (isFinite(data4))){if(data4 < 0 || isNaN(data4)){validate12.errors = [{instancePath:instancePath+"/notes/" + i0+"/durationSeconds",schemaPath:"/MusicNote/properties/durationSeconds/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}else {validate12.errors = [{instancePath:instancePath+"/notes/" + i0+"/durationSeconds",schemaPath:"/MusicNote/properties/durationSeconds/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid3 = _errs12 === errors;}else {var valid3 = true;}}}}}}else {validate12.errors = [{instancePath:instancePath+"/notes/" + i0,schemaPath:"/MusicNote/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs4 === errors;if(!valid1){break;}}}else {validate12.errors = [{instancePath:instancePath+"/notes",schemaPath:"#/properties/notes/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}}}}}else {validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate12.errors = vErrors;return errors === 0;}function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="/MusicPieceVerbose" */;let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.parts === undefined) && (missing0 = "parts")){validate11.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(key0 === "parts")){validate11.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.parts !== undefined){let data0 = data.parts;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){const _errs4 = errors;if(!(validate12(data0[i0], {instancePath:instancePath+"/parts/" + i0,parentData:data0,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid1 = _errs4 === errors;if(!valid1){break;}}}else {validate11.errors = [{instancePath:instancePath+"/parts",schemaPath:"#/properties/parts/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}
